services:
  clickhouse_db:
    image: bitnami/clickhouse:latest
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - CLICKHOUSE_ADMIN_PASSWORD=admin
      - CLICKHOUSE_ADMIN_USER=default
      - CLICKHOUSE_HTTP_PORT=9123
    networks:
      default:
    ports:
      - 9123:9123
    volumes:
      - ./tests/configs/docker/tests_override.xml:/bitnami/clickhouse/etc/conf.d/override.xml:ro
    healthcheck:
      test: ["CMD", "true"]
      interval: 5s
      timeout: 1s
      retries: 1
      start_period: 15s

  mysql_db:
    image: mysql:8.4.3
    environment:
      MYSQL_DATABASE: admin
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: admin
    ports:
      - "9306:3306"
    volumes:
      - ./tests/configs/docker/test_mysql.cnf:/etc/mysql/my.cnf:ro
    networks:
      - default
    healthcheck:
      test: ["CMD", "true"]
      interval: 5s
      timeout: 1s
      retries: 1
      start_period: 15s

  mariadb_db:
    image: mariadb:11.5.2
    environment:
      - MARIADB_DATABASE=admin
      - MARIADB_ROOT_HOST=%
      - MARIADB_ROOT_PASSWORD=admin
    networks:
      default:
    ports:
      - 9307:3306
    volumes:
      - ./tests/configs/docker/test_mariadb.cnf:/etc/mysql/my.cnf:ro  # Adjust path to MariaDB config location if needed
    healthcheck:
      test: ["CMD", "true"]
      interval: 5s
      timeout: 1s
      retries: 1
      start_period: 15s

  percona_db:
    image: percona/percona-server:8.4
    environment:
      MYSQL_DATABASE: admin
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
    ports:
      - "9308:3306"
    volumes:
      - ./tests/configs/docker/test_percona.cnf:/etc/mysql/conf.d/custom.cnf:ro
      - percona_data:/var/lib/mysql
    networks:
      - default
    command: --skip-mysqlx --socket=/tmp/mysql_percona.sock --pid-file=/tmp/mysql_percona.pid
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping --socket=/tmp/mysql_percona.sock -u root -padmin"]
      interval: 30s
      timeout: 10s  
      retries: 3
      start_period: 180s

  replicator:
    build:
      context: .
      dockerfile: Dockerfile
    network_mode: host
    volumes:
      - ./:/app/
      # Create a named volume for binlog data with proper permissions
      - binlog_data:/app/binlog/
    entrypoint: ["/bin/bash"]
    command: ["-c", "mkdir -p /app/binlog && chmod 777 /app/binlog && touch /tmp/ready && tail -f /dev/null"]
    healthcheck:
      test: [ 'CMD-SHELL', 'test -f /tmp/ready' ]
      interval: 2s
      retries: 100
      start_period: 10s
    depends_on:
      clickhouse_db:
        condition: service_healthy
      mysql_db:
        condition: service_healthy
      mariadb_db:
        condition: service_healthy
      percona_db:
        condition: service_started  # Start dependency only (not health check)

volumes:
  percona_data:
  binlog_data:
